<?php

function uofm_export_mods_custom_queue($pid) {
  $add_hdl = $add_pid = FALSE;
  if (!is_null(drush_get_option('add_ids', NULL))) {
    // We want to add both handle and pid to MODS.
    $add_hdl = $add_pid = TRUE;
  }
  else {
    if (!is_null(drush_get_option('add_hdl', NULL))) {
      // Add handle
      $add_hdl = TRUE;
    }
    if (!is_null(drush_get_option('add_pid', NULL))) {
      $add_pid = TRUE;
    }
  }
  return array('pid' => $pid, 'add_hdl' => $add_hdl, 'add_pid' => $add_pid, 'dir' => drush_get_option('directory', NULL));
}

function uofm_export_mods_worker($data) {
  $loader = function($object) {
    if (is_string($object)) {
      module_load_include('inc', 'islandora', 'includes/utilities');
      if (islandora_is_valid_pid($object)) {
        return islandora_object_load($object);
      }
      else {
        return FALSE;
      }
    }
    if (is_a($object, 'AbstractObject')) {
      return $object;
    }
    return FALSE;
  };
  $obj = $loader($data['pid']);
  if ($obj !== FALSE) {
    if (isset($obj['MODS'])) {
      $mods_content = $obj['MODS']->content;
      $mods = new DOMDocument();
      $mods->loadXML($mods_content);
      $xpath = new DOMXPath($mods);
      $xpath->registerNamespace('mods', 'http://www.loc.gov/mods/v3');
      $patch = array();
      if ($data['add_hdl'] === TRUE) {
        $hits = $xpath->query('//mods:identifier[@type="hdl"]');
        if ($hits->length == 0) {
          drush_log(t('No hdl in !p, adding.', array('!p' => $data['pid'])));
          $hdl = "10719/" . explode(':', $data['pid'])[1];
          $patch['ns'] = array(
            'mods' => 'http://www.loc.gov/mods/v3',
          );
          $patch['changes'] = array(
            array('type' => 'add', 'parent' => '/mods:mods', 'new' => '<mods:identifier type="hdl">' . $hdl . '</mods:identifier>'),
          );
        }

      }
      if ($data['add_pid'] === TRUE) {
        $hits = $xpath->query('//mods:identifier[@type="pid"]');
        if ($hits->length == 0) {
          drush_log(t('No pid in !p, adding.', array('!p' => $data['pid'])));
          if (!isset($patch['ns']) || !array_key_exists('mods', $patch['ns'])) {
            $patch['ns'] = array(
              'mods' => 'http://www.loc.gov/mods/v3',
            );
          }
          if (isset($patch['changes']) && is_array($patch['changes'])) {
            $patch['changes'][] = array('type' => 'add', 'parent' => '/mods:mods', 'new' => '<mods:identifier type="pid">' . $data['pid'] . '</mods:identifier>');
          }
          else {
            $patch['changes'] = array(
              array('type' => 'add', 'parent' => '/mods:mods', 'new' => '<mods:identifier type="pid">' . $data['pid'] . '</mods:identifier>'),
            );
          }
        }
      }
      if (isset($patch['changes'])) {
        try {
          $new_mods = \Drupal\manidora\XMLPatcher::patch($mods_content, $patch);
          $obj['MODS']->content = $new_mods;
          $mods_content = $new_mods;
        }
        catch (\Drupal\manidora\XMLPatcherException $e) {
          drush_log(t('Error patching MODS record !p: !e', array('!p' => $data['pid'], '!e' => $e->getMessage())), 'error');
          return FALSE;
        }
      }
      if (file_exists($data['dir']) && is_dir($data['dir'])) {
        $filename = rtrim($data['dir'], '/') . '/' . str_replace(':', '_', $data['pid']) . '_MODS.xml';
        if (file_put_contents($filename, $mods_content) === FALSE) {
          drush_log(t('Failed to create file !fn', array('!fn' => $filename)), 'error');
          return FALSE;
        }
      }
    }
    else {
      drush_log(t('Object !p has no MODS field', array('!p' => $data['pid'])));
    }
  }
  else {
    drush_log(t('Error loading pid !p', array('!p' => $data['pid'])), 'error');
    return FALSE;
  }
  return TRUE;
}  
